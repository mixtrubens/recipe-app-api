version: '3'

services:
 app:
   build:
     context: .
   ports:
     - "8000:8000"
   user: root
   volumes:
     - ./app:/code
   command: ["./start.sh" ] 
   
   command: >
    sh -c "python manage.py wait_for_db &&
           python manage.py makemigrations &&
           python manage.py migrate &&
           python manage.py runserver 0.0.0.0:8000"
   environment:
     - DB_HOST=db
     - DB_NAME=app
     - DB_USER=postgres
     - DB_PASS=supersecretpassword
   
   depends_on:
     - db
 db:
   image: postgres:10-alpine
   environment:
    - POSTGRES_DB=app
    - POSTGRES_USER=postgres
    - POSTGRES_PASSWORD=supersecretpassword

 postgres:
   container_name: postgres_container
   image: postgres:10-alpine
   environment:
     POSTGRES_USER: ${POSTGRES_USER:-postgres}
     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
     PGDATA: /var/lib/postgresql/data/pg_data
   volumes:
     - postgres:/var/lib/postgresql/data/pg_data
   ports:
     - "5432:5432"
   networks:
     - postgres
   restart: unless-stopped

 pgadmin:
   container_name: pgadmin_container
   image: dpage/pgadmin4
   environment:
     PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-root}
     PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-root}
   volumes:
     - pgadmin:/root/.pgadmin
   ports:
     - "${PGADMIN_PORT:-5050}:80"
   networks:
     - postgres
   restart: unless-stopped      

volumes:
   postgres:
   pgadmin:
    
networks:
   postgres:
     driver: bridge   